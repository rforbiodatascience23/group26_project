---
title: "Group 26 - Project"
author: 
- "Carl Felix Freiesleben - s203521"
- "Emilie Munk - s203538"
- "Josefine Løken - s183784"
- "Judith Tierno Martí - s222869"
- "Sahand Yazdani - s203538"
format:
  html: 
    embed-resources: true
execute: 
  message: FALSE
  warning: FALSE
---
```{r}

library(tidyverse)
library(broom)
library(purrr)
library(ggrepel)
```

This file works with analysing the dataset using PCA.

Load data
```{r}
rhc_aug <- read_csv("../data/rhc_aug.csv")
```

## PCA analysis
We change the swang1 variable to 1 if they had RHC performed and 0 if they did not.
Furthermore, we choose the variables we wanted to investigate. Then we used the command prcomp, which, admittedly is a bit of a black box function. It performs a principal component analysis on our data, and also standardizes the data.

```{r}
rhc_for_pca <- rhc_aug |>
  select(c(death, swang1, age, edu, 
           meanbp1, resp1, hrt1, 
           crea1, pot1, surv2md1)) |> 
    mutate(death = case_when(
         death == 0 ~ "Alive",
         death == 1 ~ "Dead"))
rhc_for_pca

pca_fit <- rhc_for_pca |> 
  select(!death) |> 
  prcomp(scale = TRUE)

pca_fit

```


I plot the coordinates of the first and second PCs, as well as the result of the different observations.
```{r}
rhc_for_pca
coordinates <- pca_fit |> 
  augment(rhc_for_pca) |> # add original dataset back in
  ggplot(aes(.fittedPC1, 
             .fittedPC2,
             color = death), 
             alpha = 0.5) + 
  geom_point(size = 1.5) +
  scale_color_manual(values = c(Dead = "darkred", 
                                Alive = "darkolivegreen2"),
  ) +
  labs(
    x = "Principal Component 1",
    y = "Principal Component 2",
    title = "Observations Plotted on First and Second Principal Components"
  )
coordinates

ggsave(filename = "07_result_plotted_on_coordinates_5.png",
       plot = coordinates,
       device = "png",
       path = "../results",
       scale = 1,
       limitsize = TRUE)


```


The Eigenvalues are investigated, as well as how much of the variance each of the PCs explain.
Then explanation of each PC is plotted as well as the accumulated explanation.
```{r}
pca_fit |> 
  tidy(matrix = "eigenvalues")

pca_fit |> 
  tidy(matrix = "eigenvalues")


transformation_coefficient <-  1/0.18768
transformation_coefficient

pca_fit |> 
  tidy(matrix = "eigenvalues") |> 
  select(cumulative) |> 
  sum()

p1 <- pca_fit |>
  tidy(matrix = "eigenvalues") |> 
  ggplot(aes(PC, percent)) +
  geom_col(fill = "darkolivegreen2") +
  geom_line(aes(y = cumulative / transformation_coefficient), 
            color = "darkgoldenrod1") +
  geom_point(aes(y = cumulative / transformation_coefficient), 
             color = "darkgoldenrod1") +
  geom_hline(aes(yintercept = 0.8 / transformation_coefficient),
             linetype = 2, 
             color = "red") +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(labels = scales::percent_format(),
                     expand = expansion(mult = c(0, 0.01)),
                     sec.axis = sec_axis(trans = ~.*transformation_coefficient, 
                        name = "Cumulative Variance Explained",
                        labels = scales::percent_format())) +
  annotate("text", 
           label = "PCs needed : 7", 
           x = 7, 
           y = 0.125, 
           color = "darkred") +
  labs(y = "Percent Variance Explained by Each PC",
       title = "Variance explained by Principal Components")
p1

ggsave(filename = "07_PCA_explained_6.png",
       plot = p1,
       device = "png",
       path = "../results",
       scale = 1,
       limitsize = TRUE)

```


I take a look at the rotation matrix
```{r}
pca_fit |> 
  tidy(matrix = "rotation")

```

The influence of each variable on the first and second PC is plotted.
```{r}
arrow_style <- arrow(angle = 20, 
                     ends = "first", 
                     type = "closed", 
                     length = grid::unit(8, "pt"))

# plot rotation matrix
pca_fit |> 
  tidy(matrix = "rotation") |> 
  pivot_wider(names_from = "PC", 
              names_prefix = "PC", 
              values_from = "value") |> 
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, 
               yend = 0, 
               arrow = arrow_style) +
  geom_text(aes(label = column),
            hjust = 1, nudge_x = -0.02, 
            color = "#904C2F") +
  xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed() # fix aspect ratio to 1:1




```



