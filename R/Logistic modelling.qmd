---
title: "Logistic modelling"
format: html
editor: visual
---

## Logistic modelling

The Aps1 is the APACHE score, which is a score given to patients in the ICU based on their vital scores, age and overall health, this score estimates the mortality of the patient based on how ill they are. Usually this ranges from 0-71, but in this data set the min and max are 3-147, this is probably because the scoring system has been changed since the data was created.

We wish to model what scores indicates death and what scores indicate you will survive for the APACHE score.

As the value death is a binomial value we choose the logistic binomial model to try and fit the data.

```{r}
library(tidyverse)
library(base)
library(patchwork)
library(scales)
library(ggridges)
library(patchwork)
library(ggseqlogo)
library(dplyr)
library(table1)
library(broom)
library(purrr)
```

First we see if there is a general pattern in the mean values of the APACHE scores.

```{r}
rhc_aug |> 
  group_by(Diagnosis, death) |> 
  summarise(mu=mean(aps1))
```

In all cases it is clear that the means of the APACHE scores are higher for those who end up dying.

### **Model of one disease**

First we try to do the prediction based on one of the diseases that was reason for admission (card).

```{r}

aps1_card<-rhc_aug |> 
  filter(Diagnosis=='card')

aps1_card_model <- glm(formula = death ~ aps1,
                      data = aps1_card, 
                      family='binomial')

aps1_card_model
```

The intercept means that each time the APACHE score increases by one, the chance of dying increases with e\^2,5 this is roughly 2.5%.

```{r}
aps1_card_model |> 
  summary()
```

It seems that it is statistically significant.

We then choose to model the outcome for all the different admission diagnoses to see if we can predict the outcome of death by the APACHE score.

```{r}
aps1_data_nested <- rhc_aug |> 
  group_by(Diagnosis) |> 
  nest() |> 
  ungroup()
aps1_data_nested
```

```{r}
aps1_data_nested |> 
  filter(Diagnosis == "card") |> 
  pull()
```

```{r}

aps1_data_nested <- aps1_data_nested |> 
    mutate(model_object = map(.x = data,
                              .f = ~glm(formula = death ~ aps1,                                         data = .x, 
                                        family='binomial')))

aps1_data_nested
```

```{r}

aps1_data_nested |>   
  filter(Diagnosis == "card") |> 
    pull(model_object) |> 
    pluck(1) |>
    tidy(conf.int = TRUE,
       conf.level = 0.95)
```

We exclude the ortho diagnosis as we earlier in other analysis saw, it only had 3 data points, which is probaly also the reason why this model fails on this value.

```{r}
aps1_data_nested <- aps1_data_nested |> 
  group_by(Diagnosis) |> 
  filter(Diagnosis != "ortho") |> 
  mutate(model_object_tidy = map(.x = model_object,
                                 .f = ~tidy(conf.int = TRUE,
                                            conf.level = 0.95,
                                            x = .x)))
aps1_data_nested
```

```{r}
aps1_estimates <- aps1_data_nested |>  
                    unnest(cols = model_object_tidy)
aps1_estimates

```

```{r}
aps1_estimates <- aps1_estimates |> 
                        select(c(term,
                                 Diagnosis, 
                                 p.value, 
                                 estimate, 
                                 conf.low, 
                                 conf.high))
aps1_estimates
```

```{r}
aps1_estimates <- aps1_estimates |>
                    
    mutate(q.value = map_dbl(.x=p.value,
                             .f = ~p.adjust(.x, 
                                            method = 'fdr'))) |> 
  
    mutate(is_significant = case_when(q.value > 0.05 ~ 'no',
                                      q.value <= 0.05 ~ 'yes'))

aps1_estimates
```

We plot the estimates:

```{r}
aps1_estimates |>
  filter(term=='aps1') |> 
  ggplot(mapping = aes(x = estimate,
                       y = fct_reorder(Diagnosis,
                                       estimate))) +
  geom_point(aes(color=is_significant)) +
  geom_errorbarh(aes(xmin = conf.low, 
                     xmax = conf.high, color=is_significant)) +
  geom_vline(xintercept = 0) +
  labs(x='Estimates(95% CIs)', 
       y='Diseases',
       title = '')
```

The higher the estimate, the higher the risk of dying is by each rise in the APACHE score.

```{r}
aps1_estimates |> 
  filter(term=='aps1') |> 
  mutate(label = case_when(is_significant == "no" ~ ' ',
                            is_significant == "yes" ~ Diagnosis))|> 
  ggplot(mapping = aes(x = estimate,
                       y=p.value, color=is_significant)) +
  geom_point()+
  geom_text_repel(aes(label=label))+
  labs(x='Estimates', 
       y='p-value')
```
