```{r}

library(tidyverse)
library(broom)
library(purrr)
library(ggrepel)
```

This file works with analysing the dataset using PCA.

```{r}
rhc_aug
```

## PCA analysis
We change the swang1 variable to 1 if they had RHC performed and 0 if they did not.
Furthermore, we choose the variables we wanted to investigate. Then we used the command prcomp, which, admittedly is a bit of a black box function. It performs a principal component analysis on our data, and also standardizes the data.

```{r}
rhc_for_pca <- rhc_aug |>
  select(c(death,swang1,age,edu,meanbp1,resp1,hrt1,crea1,pot1,surv2md1)) |> 
    mutate(swang1 = case_when(
         death == 0 ~ "Alive",
         death == 1 ~ "Dead"))
rhc_for_pca

pca_fit <- rhc_for_pca |> 
  select(!death) |> 
  prcomp(scale = TRUE)

pca_fit

```


I plot the coordinates of the first and second PCs, as well as the result of the different observations.
```{r}
rhc_for_pca
coordinates <- pca_fit |> 
  augment(rhc_for_pca) |> # add original dataset back in
  ggplot(aes(.fittedPC1, .fittedPC2,color = death)) + 
  geom_point(size = 1.5) +
  scale_color_manual(
    values = c(Dead = "red", Alive = "green")
  )
coordinates

ggsave("../results/result_plotted_on_coordinates.png", coordinates)


```


The Eigenvalues are investigated, as well as how much of the variance each of the PCs explain.
Then explanation of each PC is plotted as well as the accumulated explanation.
```{r}
pca_fit |> 
  tidy(matrix = "eigenvalues")

pca_fit |> 
  tidy(matrix = "eigenvalues")


1.2996592 / (1.2996592 + 1.1554729 +1.1024399 +1.0453468+ 0.9791764+ 0.8827722+ 0.8353270 +0.8135874 +0.7549012)


transformation_coefficient <-  1/0.18768
transformation_coefficient
pca_fit |> 
  tidy(matrix = "eigenvalues") |> 
  select(cumulative) |> 
  sum()

p1 <- pca_fit |>
  tidy(matrix = "eigenvalues") |> 
  ggplot(aes(PC, percent)) +
  geom_col(fill = "darkolivegreen2", alpha = 0.8) +
  geom_line(aes(y = cumulative / transformation_coefficient), color = "darkgoldenrod1") +
  geom_point(aes(y = cumulative / transformation_coefficient), color = "darkgoldenrod1") +
  geom_hline(aes(yintercept = 0.8 / transformation_coefficient),linetype = 2, color = "red") +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01)),
    sec.axis = sec_axis(trans =~.*transformation_coefficient, name = "Cumulative",
                        labels = scales::percent_format())
  ) +
  annotate("text", label = "PCs needed : 7", x = 7, y = 0.125, color = "darkred")

ggsave("../results/PCA_explained.png", p1)


```


I take a look at the rotation matrix
```{r}
pca_fit |> 
  tidy(matrix = "rotation")

```

The influence of each variable on the first and second PC is plotted.
```{r}
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

# plot rotation matrix
pca_fit |> 
  tidy(matrix = "rotation") |> 
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") |> 
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#904C2F"
  ) +
  xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed() # fix aspect ratio to 1:1

```

A look at how many people got RHC for each disease is taken
```{r}

rhc_clean |> 
  ggplot(aes(x = factor(swang1), fill = factor(swang1))) +
  geom_bar() +
  facet_wrap(~cat1, scales = "free_y") +
  labs(title = "How many people got RHC for each disease",
       x = "RHC",
       y = "Count")

```

We want to explore how many people died with and without having RHC performed.
```{r}
rhc_clean |> 
  mutate(death = case_when(
    death == 0 ~ "Survived",
    death == 1 ~ "Dead"
  )) |> 
  ggplot(aes(x = factor(swang1), fill = factor(swang1))) +
  geom_bar() +
  facet_wrap(~death, scales = "free_y") +
  labs(title = "How many survivers/deceased had RHC performed",
       x = "RHC",
       y = "Counts",
       legend.title = element_text(colour = "steelblue"))

```

We investigate a possible way to make a table 1
```{r}
library("table1") # <= Yes, this should normally go at the beginning!
rhc_clean |>
  mutate(Gender = factor(swang1),
         Cohort = factor(cat1)) |>
  table1(x = formula(~ sex + age | cat1),
         data = _)
```

```{r}
rhc_clean |>
  mutate(ca = factor(ca)) |> 
  count(ca)
  
```


Here we see how well the attribute surv2md1 predict whether people are dead after 2 months using a linearmodel.
```{r}

model = rhc_clean |> 
  lm(surv2md1 ~ death, data = _)

model

```

We now look into seeing how well each attribute precicts whether the patient dies within 2 months.
First Swang ismutated, and the proper values are choosen

```{r}
rhc_clean_long <- rhc_clean |> 
  mutate(swang1 = case_when(
                            swang1 == "RHC" ~ 1,
                            swang1 == "No RHC" ~ 0)) |> 
  select_if(is.numeric) |> 
  select(!c(dschdte,sadmdte,ptID,dthdte,lstctdte)) |> 
  select_if(~ !any(is.na(.))) |> 
    pivot_longer(cols = !death,
                names_to = "attribute",
                values_to = "value")

```

```{r}
rhc_clean_long_nested <- rhc_clean_long |>
  group_by(attribute) |>
  nest() |> 
  ungroup()

rhc_clean_long_nested
```

```{r}
rhc_clean_long_nested <- rhc_clean_long_nested |> 
  group_by(attribute) |>
  mutate(model_object = map(.x = data,
      .f = ~lm(formula = death ~ value,
               data = .x)))
```

```{r}
rhc_clean_long_nested
```

```{r}
rhc_clean_long_nested <- rhc_clean_long_nested |>
  group_by(attribute)|> 
  mutate(model_object_tidy = 
           map(.x = model_object,
               .f = ~tidy(
                 conf.int = TRUE,
                 conf.level = 0.95,
                 x = .x)))
rhc_clean_long_nested
```

```{r}
rhc_clean_long_nested |>
  filter(attribute == "swang1") |> # Replace "g2E09" with whatever was YOUR favourite gene!
  pull(model_object_tidy)
```

```{r}
rhc_estimates <- rhc_clean_long_nested |> 
  unnest(cols = model_object_tidy)
rhc_estimates
```

```{r}
rhc_estimates <- rhc_estimates |>
  filter(term == "death") |> 
  select(c(attribute, p.value, estimate, conf.low, conf.high)) |> 
  ungroup()

rhc_estimates
```

```{r}
rhc_estimates <- rhc_estimates |>
  mutate(q.variable = p.adjust(p.value)) |> 
  mutate(is_signifcant =
           ifelse(
             p.value <= 0.05,
             "yes",
             "no"
                 ))

rhc_estimates
```

```{r}
rhc_estimates |> 
  ggplot(mapping = aes(x = estimate, y = fct_reorder(attribute,estimate))) +
  geom_point() +
  geom_vline(xintercept = 0) +
  geom_errorbar(aes(xmax = conf.high, xmin = conf.low)) +
  theme_minimal() +
  labs(title = "Genes Associated with Early Metastasis in Small Node-Negative Breast Carcinoma",
     x = "Estimates (95%CIs)",y = "", caption = "data from ...")
```
